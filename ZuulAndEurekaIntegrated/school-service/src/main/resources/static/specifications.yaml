openapi: 3.1.0
info:
  title: open-api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/student:
    post:
      summary: ''
      operationId: post-v1-student
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                title: Student
                type: object
                properties:
                  studentId:
                    type: string
                  studentName:
                    type: string
                description: Student Model
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Create Student
      requestBody:
        content:
          application/json:
            schema:
              title: Student
              type: object
              properties:
                studentId:
                  type: string
                studentName:
                  type: string
              description: Student Model
        description: |
          Student Data
  '/v1/student/{studentId}':
    parameters:
      - schema:
          type: string
        name: studentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Student
                type: object
                properties:
                  studentId:
                    type: string
                  studentName:
                    type: string
                description: Student Model
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-v1-student-studentId
      description: Get By Id
    put:
      summary: ''
      operationId: put-v1-student-studentId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Student
                type: object
                properties:
                  studentId:
                    type: string
                  studentName:
                    type: string
                description: Student Model
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Update By id
      requestBody:
        content:
          application/json:
            schema:
              title: Student
              type: object
              properties:
                studentId:
                  type: string
                studentName:
                  type: string
              description: Student Model
    delete:
      summary: ''
      operationId: delete-v1-student-studentId
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Delete By id
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
